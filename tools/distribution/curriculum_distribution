
import numpy as np
import sys, os

sys.path.append(os.path.abspath("./"))
from printing import print_section, print_action
from storage import ParamStorage
from config import filename_params, dataset_params, pr_path
from augmenter import Creator
import tools.util as util

'''
Use sampler and curriculum to create distribution of diffs
    -For all
    -For road diffs
    -For non road diffs

Use this to determine how to create a curriculum learning scheme.
'''
print_section('Generating plot of diff distribution between label and prediction')
threshold = 1.0

if '-t' in sys.argv:
    idx = sys.argv.index('-t')
    threshold = float(sys.argv[idx+1])
    print_action("threshold set to {}".format(threshold))

store = ParamStorage()
teacher = store.load_params(path=filename_params.curriculum_teacher)
evaluate = util.create_simple_predictor(teacher['model'], teacher['params'])

creator = Creator(
    pr_path,
    dim=(dataset_params.input_dim, dataset_params.output_dim),
    preproccessing=dataset_params.use_preprocessing,
    std=dataset_params.dataset_std,
    reduce_training=dataset_params.reduce_training,
    reduce_testing=dataset_params.reduce_testing,
    reduce_validation=dataset_params.reduce_validation
)
creator.load_dataset()

data, labels = creator.sample_data(
                creator.train,
                400,
                curriculum=evaluate,
                curriculum_threshold=threshold,
                rotation=dataset_params.use_rotation
            )